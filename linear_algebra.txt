Functions description in cub3D:

- init_image(creates the actual image)
	- loop (goes from X: 0-Width for every Y++)

We get a Cartesian plane number from each number X & Y represent in each point of the loop.
	- The Cartesian plane number goes up from (-1 to 1) in both X & Y.

- crt_image(gets the coordinates of  the Cartesian plane, respectfully to be able to decide what colour the screen pixel should be)
	- First (init_rays) gets the length two rays in the Cartesian plane need to travel to get to the next X/Y in the grid.
		- Depending on the FOV, direction and camera plane, these lengths oscillate.
	- Second, (init_sides) gets the length the ray has to travel to get in both X/Y  to get to a absolute value in the grid.

	- Third, (find_wall), gets the number of steps needed to encounter a wall in our grid using the previous calculated vectors and summing them up when neccessary.
		- The vectors that we use are:
			- Initial Side Length of X & Y, Common Side Distance of X &Y

How do we get the Initial Side Length of X & Y?

Before we get the Initial Side Length, we need the Common Side Length, as we will use it as a reference to calculate later on.

Imagine we start at the point {10, 10.5} in a grid. We have a 0.5 absolute value difference to get either to 10 or 11 if we are looking anywhere in the X axis.

We can simply put it like this: {Length until non-decimal value inside the grid * Length from one x-side to another}